/* dp_sp_dpbuiltin.hpp
   Generated by spxml2struct from builtin.xml

   !!! DO NOT EDIT !!!

*/

#ifndef __dp_sp_dpbuiltin_hpp__
#define __dp_sp_dpbuiltin_hpp__

#include "spdatapickle/spdplib.hpp"

#ifdef __cplusplus
extern "C" {
#endif

enum {
	eTypeSP_DPChar = eTypeSPDPBuiltin + 1,
	eTypeSP_DPInt16,
	eTypeSP_DPUInt16,
	eTypeSP_DPInt32,
	eTypeSP_DPUInt32,
	eTypeSP_DPInt64,
	eTypeSP_DPUInt64,
	eTypeSP_DPFloat,
	eTypeSP_DPDouble,
	eTypeSP_DPString,
	eTypeSP_DPStringList,
	eTypeSP_DPBuffer,
	eTypeSP_DPInt32List,
	eTypeSP_DPUInt32List,
	eTypeSP_DPInt64List,
	eTypeSP_DPUInt64List,
	eTypeSP_DPRpcError
};

typedef struct tagSP_DPChar {
	char mValue;
} SP_DPChar_t;

typedef struct tagSP_DPInt16 {
	int16_t mValue;
} SP_DPInt16_t;

typedef struct tagSP_DPUInt16 {
	uint16_t mValue;
} SP_DPUInt16_t;

typedef struct tagSP_DPInt32 {
	int32_t mValue;
} SP_DPInt32_t;

typedef struct tagSP_DPUInt32 {
	uint32_t mValue;
} SP_DPUInt32_t;

typedef struct tagSP_DPInt64 {
	int64_t mValue;
} SP_DPInt64_t;

typedef struct tagSP_DPUInt64 {
	uint64_t mValue;
} SP_DPUInt64_t;

typedef struct tagSP_DPFloat {
	float mValue;
} SP_DPFloat_t;

typedef struct tagSP_DPDouble {
	double mValue;
} SP_DPDouble_t;

typedef struct tagSP_DPString {
	char * mString;
} SP_DPString_t;

typedef struct tagSP_DPStringList {
	SP_DPString_t * mList;

	int32_t mCount;
} SP_DPStringList_t;

typedef struct tagSP_DPBuffer {
	char * mBuffer;

	int32_t mSize;
} SP_DPBuffer_t;

typedef struct tagSP_DPInt32List {
	int32_t * mList;

	int32_t mCount;
} SP_DPInt32List_t;

typedef struct tagSP_DPUInt32List {
	uint32_t * mList;

	int32_t mCount;
} SP_DPUInt32List_t;

typedef struct tagSP_DPInt64List {
	int64_t * mList;

	int32_t mCount;
} SP_DPInt64List_t;

typedef struct tagSP_DPUInt64List {
	uint64_t * mList;

	int32_t mCount;
} SP_DPUInt64List_t;

typedef struct tagSP_DPRpcError {
	int32_t mCode;
	char * mMessage;
} SP_DPRpcError_t;

typedef struct tagSP_DPMetaInfo SP_DPMetaInfo_t;
extern SP_DPMetaInfo_t * gSP_DPBuiltinMetaInfo;

class SP_XmlStringBuffer;
class SP_DataPickle;

class SP_DPBuiltinPickle {
public:
	SP_DPBuiltinPickle( int pickleType );
	~SP_DPBuiltinPickle();

	int pickle( SP_DPChar_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPChar_t * structure );

	int pickle( SP_DPInt16_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPInt16_t * structure );

	int pickle( SP_DPUInt16_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPUInt16_t * structure );

	int pickle( SP_DPInt32_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPInt32_t * structure );

	int pickle( SP_DPUInt32_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPUInt32_t * structure );

	int pickle( SP_DPInt64_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPInt64_t * structure );

	int pickle( SP_DPUInt64_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPUInt64_t * structure );

	int pickle( SP_DPFloat_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPFloat_t * structure );

	int pickle( SP_DPDouble_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPDouble_t * structure );

	int pickle( SP_DPString_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPString_t * structure );

	int pickle( SP_DPStringList_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPStringList_t * structure );

	int pickle( SP_DPBuffer_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPBuffer_t * structure );

	int pickle( SP_DPInt32List_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPInt32List_t * structure );

	int pickle( SP_DPUInt32List_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPUInt32List_t * structure );

	int pickle( SP_DPInt64List_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPInt64List_t * structure );

	int pickle( SP_DPUInt64List_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPUInt64List_t * structure );

	int pickle( SP_DPRpcError_t * structure, SP_XmlStringBuffer * buffer );
	int unpickle( SP_XmlStringBuffer * buffer, SP_DPRpcError_t * structure );


public:
	static int freeFields( SP_DPChar_t & structure );
	static int deepCopy( const SP_DPChar_t * src, SP_DPChar_t * dest );

	static int freeFields( SP_DPInt16_t & structure );
	static int deepCopy( const SP_DPInt16_t * src, SP_DPInt16_t * dest );

	static int freeFields( SP_DPUInt16_t & structure );
	static int deepCopy( const SP_DPUInt16_t * src, SP_DPUInt16_t * dest );

	static int freeFields( SP_DPInt32_t & structure );
	static int deepCopy( const SP_DPInt32_t * src, SP_DPInt32_t * dest );

	static int freeFields( SP_DPUInt32_t & structure );
	static int deepCopy( const SP_DPUInt32_t * src, SP_DPUInt32_t * dest );

	static int freeFields( SP_DPInt64_t & structure );
	static int deepCopy( const SP_DPInt64_t * src, SP_DPInt64_t * dest );

	static int freeFields( SP_DPUInt64_t & structure );
	static int deepCopy( const SP_DPUInt64_t * src, SP_DPUInt64_t * dest );

	static int freeFields( SP_DPFloat_t & structure );
	static int deepCopy( const SP_DPFloat_t * src, SP_DPFloat_t * dest );

	static int freeFields( SP_DPDouble_t & structure );
	static int deepCopy( const SP_DPDouble_t * src, SP_DPDouble_t * dest );

	static int freeFields( SP_DPString_t & structure );
	static int deepCopy( const SP_DPString_t * src, SP_DPString_t * dest );

	static int freeFields( SP_DPStringList_t & structure );
	static int deepCopy( const SP_DPStringList_t * src, SP_DPStringList_t * dest );

	static int freeFields( SP_DPBuffer_t & structure );
	static int deepCopy( const SP_DPBuffer_t * src, SP_DPBuffer_t * dest );

	static int freeFields( SP_DPInt32List_t & structure );
	static int deepCopy( const SP_DPInt32List_t * src, SP_DPInt32List_t * dest );

	static int freeFields( SP_DPUInt32List_t & structure );
	static int deepCopy( const SP_DPUInt32List_t * src, SP_DPUInt32List_t * dest );

	static int freeFields( SP_DPInt64List_t & structure );
	static int deepCopy( const SP_DPInt64List_t * src, SP_DPInt64List_t * dest );

	static int freeFields( SP_DPUInt64List_t & structure );
	static int deepCopy( const SP_DPUInt64List_t * src, SP_DPUInt64List_t * dest );

	static int freeFields( SP_DPRpcError_t & structure );
	static int deepCopy( const SP_DPRpcError_t * src, SP_DPRpcError_t * dest );


private:
	SP_DataPickle * mImpl;
};


#ifdef __cplusplus
}
#endif

#endif

